exec systemctl --user import-envionment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-envionment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

#autostart programs
#exec_always steam
exec steam
exec /home/bloodwolfe/discord-screenaudio/build/discord-screenaudio
exec_always /bin/custom/steamgamename.sh

#no mouse acc
input * accel_profile flat

#execs
exec ydotoold

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show drun
bindsym $mod+shift+semicolon rofi -show drun
### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# I COMMENTED THIS OUT output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg /home/bloodwolfe/.wallpapers/3840x2160-black-solid-color-background.jpg fill

#floating kitten

bindsym $mod+m [title="floatingkitty"] scratchpad show
for_window [title="floatingkitty"] border pixel 1 
for_window [title="floatingkitty"] border_colors #ffffff

#bindsym $mod+n [con_mark="kitty"] scratchpad show
#exec_always kitty --name="hidden-floating-kitty" --hidden --keep-focus
#bindsym $mod+n [instance="hidden-floating-kitty"] focus
#for_window [instance="hidden-floating-kitty"] floating enable, focus, fullscreen



#showmethekey support
for_window [app_id="one.alynx.showmethekey" title="Floating Window - Show Me The Key"] {
  floating enable
  sticky enable
}

#keyboard bindsyms
bindsym $mod+q exec ~/launchoptions.sh
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0

include "monitor-config"
include "style-config"
##output DP-1 {
##resolution 1920x1080@144Hz
##adaptive_sync on (kind of broken rn)
##}


# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+semicolon exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'IM GOING TO MISS YOU' -B 'k, bye :(' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+u workspace number 1
    bindsym $mod+i workspace number 2
    bindsym $mod+o workspace number 3
    bindsym $mod+p workspace number 4
    bindsym $mod+bracketleft workspace number 5
    bindsym $mod+bracketright workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+minus workspace number 11
    bindsym $mod+equal workspace number 12
    # Move focused container to workspace
    bindsym $mod+Shift+u move container to workspace number 1
    bindsym $mod+Shift+i move container to workspace number 2
    bindsym $mod+Shift+o move container to workspace number 3
    bindsym $mod+Shift+p move container to workspace number 4
    bindsym $mod+Shift+bracketleft move container to workspace number 5
    bindsym $mod+Shift+bracketright move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+minus move container to workspace number 11
    bindsym $mod+Shift+equal move container to workspace number 12
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

for_window [class="steam"] move container to workspace 12
for_window [class="steam-runtime-1"] move container to workspace 12
for_window [instance="steam"] move container to workspace 12
for_window [instance="steamwebhelper" class="steam"] move container to workspace 12

for_window [class="tidal-hifi"] move container to workspace 11
for_window [title="discord-screenaudio"] move container to workspace 6
##for_window [title="Rain World"] move container to workspace 7





#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles (i never use these)
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    #bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+g fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+f+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+f+n move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+n scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
	swaybar_command waybar
}
#the following is commented out to be replaced with waybar
 #   position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
  #  status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done

   # colors {
    #    statusline #ffffff
     #   background #323232
      #  inactive_workspace #32323200 #32323200 #5c5c5c
   # }

include /etc/sway/config.d/*

##personal customizatins

default_border none
default_floating_border pixel 1
gaps inner 5
gaps outer 5
client.focused #ffffff #000000 #ffffff #000000 #ffffff

##default_border none
##hide_edge_borders both

#bindsym $mod+semicolon  exec bemenu-run -p "Run:" -l 20 --binding vim
seat seat0 xcursor_theme Qogir-Recolored-Dracula-Purple
exec swaync
#exec neofetch
bindsym $mod+Shift+n exec swaync-client -t -sw
##for_window [class="kitty"] default_border pixel 1
exec kitty
exec polkit-dumb-agent
bindsym $mod+s exec --no-startup-id flameshot gui
##bindsym $mod+m exec --no-startup-id rofi -show drun -run-shell-command '{terminal} -e bash -ic "{cmd} && read"'
#exec --no-startup-id /home/bloodwolfe/tempvrr.sh
##exec --no-startup-id /home/bloodwolfe/buffer.sh
