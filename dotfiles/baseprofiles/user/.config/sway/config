exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec hash dbus-update-activation-environment 2>/dev/null && \
#dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
exec systemctl --user import-envionment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-envionment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
include "monitor-config"
include "style-config"

set $mod Mod4
set $left h
set $down j
set $up k
set $right l

set $term kitty
bindsym $mod+n exec kitty --directory ~/notebook

#temp marks script
bindsym $mod+2 exec swaymsg "[con_id=__focused__] mark --add m2"
bindsym $mod+4 exec swaymsg "[con_id=__focused__] mark --toggle m2"
bindsym $mod+3 exec swaymsg "[con_id=__focused__] swap container with mark m2"




exec "$HOME/.custom/albumart.sh"
exec ydottoold
exec swaync
bindsym $mod+Shift+n exec swaync-client -t -sw
exec kitty --hold neofetch
#exec polkit-dumb-agent
exec_always /usr/bin/lxqt-policykit-agent
bindsym $mod+s exec --no-startup-id flameshot gui
bindsym $mod+shift+s exec --no-startup-id flameshot full -c -p ~/Pictures

#no mouse acc
input * accel_profile flat
#input * pointer_accel -0.5

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show drun
bindsym $mod+shift+semicolon rofi -show drun

#showmethekey support
for_window [app_id="one.alynx.showmethekey" title="Floating Window - Show Me The Key"] {
  floating enable
  sticky enable
}

#keyboard bindsyms
#bindsym $mod+q exec ~/launchoptions.sh

set $hollowkitten "kitty --title hollowkitten --class hollowkitten"
#workaround from having to write individual scripts to nest commands
assign [class="hollowkitten"] 4
#floating kitty
bindsym $mod+t exec $HOME/.custom/floatingkitty.sh
for_window [title="floatingkitty"] floating enable, border pixel 1, client.focused #ffffff #000000 #ffffff #000000 #ffffff, resize set width 20ppt height 40ppt, move position 79ppt 59ppt

bindsym $mod+shift+1 exec "$HOME/.custom/bind/theme/blackout.sh"
bindsym $mod+shift+2 exec "$HOME/.custom/sparkle.sh"
#for_window [title="Ableton Live 11 Suite"] fullscreen

#, resize shrink height 55ppt, move position width 100px, client.focused #ffffff #000000 #ffffff #000000 #ffffff


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.




### Input configuration
#swaymsg -t get_inputs
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
input type:touchpad {
	dwt disabled
	accel_profile "flat"
	pointer_accel 0.5
}
input type:pointer {
    accel_profile "flat"
    pointer_accel 0
}
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+semicolon exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'IM GOING TO MISS YOU' -B 'k, bye :(' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+u workspace number 1
    bindsym $mod+i workspace number 2
    bindsym $mod+o workspace number 3
    bindsym $mod+p workspace number 4
    bindsym $mod+bracketleft workspace number 5
    bindsym $mod+bracketright workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+minus workspace number 11
    bindsym $mod+equal workspace number 12
    # Move focused container to workspace
    bindsym $mod+Shift+u move container to workspace number 1
    bindsym $mod+Shift+i move container to workspace number 2
    bindsym $mod+Shift+o move container to workspace number 3
    bindsym $mod+Shift+p move container to workspace number 4
    bindsym $mod+Shift+bracketleft move container to workspace number 5
    bindsym $mod+Shift+bracketright move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+minus move container to workspace number 11
    bindsym $mod+Shift+equal move container to workspace number 12

#could probably make a socket script for this but modesetting instead because its simple
mode "7b" {
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+g mode "register"
    bindsym 7 exec "$HOME/.custom/sway/ws19spotify.sh"
}

mode "register" {
    #oneshot mode return normal
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+g mode "default"


    bindsym $mod+u workspace number 13
    bindsym $mod+i workspace number 14
    bindsym $mod+o workspace number 15
    bindsym $mod+p workspace number 16
    bindsym $mod+bracketleft workspace number 17
    bindsym $mod+bracketright workspace number 18
    bindsym $mod+7 workspace number 19
    bindsym $mod+8 workspace number 20
    bindsym $mod+9 workspace number 21
    bindsym $mod+0 workspace number 22
    bindsym $mod+minus workspace number 23
    bindsym $mod+equal workspace number 24
    # Move focused container to workspace
    bindsym $mod+Shift+u move container to workspace number 13
    bindsym $mod+Shift+i move container to workspace number 14
    bindsym $mod+Shift+o move container to workspace number 15
    bindsym $mod+Shift+p move container to workspace number 16
    bindsym $mod+Shift+bracketleft move container to workspace number 17
    bindsym $mod+Shift+bracketright move container to workspace number 18
    bindsym $mod+Shift+7 move container to workspace number 19
    bindsym $mod+Shift+8 move container to workspace number 20
    bindsym $mod+Shift+9 move container to workspace number 21
    bindsym $mod+Shift+0 move container to workspace number 22
    bindsym $mod+Shift+minus move container to workspace number 23
    bindsym $mod+Shift+equal move container to workspace number 24

    bindsym 7 exec swaymsg "[app_id=spot] swap container with mark spotify" ; mode "regular"
    bindsym 8 exec swaymsg "[con_id=213] swap container with mark midi" ; mode "regular"
}

bindsym $mod+g mode "register"







    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#for_window [class="steam"] move container to workspace 12
#for_window [class="steam-runtime-1"] move container to workspace 12
#for_window [instance="steam"] move container to workspace 12
#for_window [instance="steamwebhelper" class="steam"] move container to workspace 12
#for_window [title="discord-screenaudio"] move container to workspace 6
#app_id is for wayland, class is for xwayland, title is anything
assign [app_id="de.shorsh.discord-screenaudio"] 6
#assign [class="spotify"] 7
assign [instance="REAPER"] 8
no_focus [title="Reaper Keys Feedback"] 
for_window [title="Reaper Keys Feedback"] resize set width 25ppt, splitv
assign [title="Mixer"] 9
#doesnt work



assign [app_id="steamkitten"] 12
for_window [app_id="steamkitten"] resize set width 20ppt

assign [class="steam"] 12
for_window [class="steam"] resize set width 60ppt

assign [title="Friends List"] 12
for_window [title="Friends List"] resize set width 20ppt, move right

for_window [title="Steam Settings"] floating enable


assign [app_id="gamescope"] 11
no_focus [app_id="gamescope"]
for_window [app_id="gamescope"] inhibit_idle none, fullscreen enable

#steam games will run as "steam_app_1234567" for class and instance
#climp
assign [app_id="spot"] 7
for_window [app_id="spot"] resize set width 75ppt, mark --add spot

assign [app_id="lyr"] 7 
for_window [app_id="lyr"] resize set width 25ppt,
assign [app_id="vis"] 7
for_window [app_id="vis"] resize set height 20ppt,


#assign [title="Spotify Premium"] 19
#for_window [title="Spotfiy Premium"] floating enable, move position 0px 0px, resize set width 70ppt, resize set height 80ppt
#focus_on_window_activation none
#resize set height 65ppt
assign [title="imvalbumart"] 7
for_window [title="imvalbumart"] resize set height 35ppt, resize set width 25ppt




focus_follows_mouse no


for_window [title="Weston"] fullscreen
for_window [title="GNU Image Manipulation Program"] fullscreen

#floating enable, resize set width 50ppt height 40ppt, move position 40ppt 2ppt

#move container to workspace 2
#resize shrink width 55ppt, splitv
for_window [title="Friends List"] resize shrink width 70ppt, splitv
##for_window [title="Rain World"] move container to workspace 7
for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0




#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles (i never use these)
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    #bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+shift+space floating toggle

    # Swap focue between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+shift+period move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+period scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 5ppt
    bindsym $down resize grow height 5ppt
    bindsym $up resize shrink height 5ppt
    bindsym $right resize grow width 5ppt

    # Ditto, with arrow keys
    bindsym Left resize shrink width 5ppt
    bindsym Down resize grow height 5ppt
    bindsym Up resize shrink height 5ppt
    bindsym Right resize grow width 5ppt

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}
bindsym $mod+r mode "resize"

# Status Bar:
bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*

#MUTE
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
bindsym $mod+m exec pactl set-source-mute @DEFAULT_SOURCE@ toggle

#PUSH TO TALK
#bindsym $mod+space exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 0 # mute mic
#bindsym --release $mod+space exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ 1 # unmute mic
