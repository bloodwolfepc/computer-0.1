#exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
#exec hash dbus-update-activation-environment 2>/dev/null && \
     #dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK
#:for_window [app_id="flameshot"] border pixel 0, floating enable, fullscreen disable, move absolute position 0 0
include "monitor-config"
include "style-config"
exec systemctl --user import-envionment WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec dbus-update-activation-envionment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec "$HOME/.custom/lyricruntime.sh"

# Variables
set $mod Mod4
set $left h
set $down j
set $up k
set $right l

set $term kitty
bindsym $mod+n exec kitty --directory ~/notebook
#bindsym $mod+b exec kitty -e bluetoothctl

#autostart progs
#exec steam
#exec /home/bloodwolfe/discord-screenaudio/build/discord-screenaudio
#exec_always /bin/custom/steamgamename.sh #works pretty badly tbh

exec ydottoold
exec swaync
bindsym $mod+Shift+n exec swaync-client -t -sw
exec kitty --hold neofetch
#exec polkit-dumb-agent
exec_always /usr/bin/lxqt-policykit-agent
bindsym $mod+s exec --no-startup-id flameshot gui
bindsym $mod+shift+s exec --no-startup-id flameshot full -c -p ~/Pictures

#no mouse acc
input * accel_profile flat
#input * pointer_accel -0.5

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show drun
bindsym $mod+shift+semicolon rofi -show drun

#showmethekey support
for_window [app_id="one.alynx.showmethekey" title="Floating Window - Show Me The Key"] {
  floating enable
  sticky enable
}

#keyboard bindsyms
#bindsym $mod+q exec ~/launchoptions.sh


#floating kitty
bindsym $mod+t exec $HOME/.custom/floatingkitty.sh
for_window [title="floatingkitty"] floating enable, border pixel 1, client.focused #ffffff #000000 #ffffff #000000 #ffffff, resize set width 20ppt height 40ppt, move position 79ppt 59ppt

#for_window [title="Ableton Live 11 Suite"] fullscreen

#, resize shrink height 55ppt, move position width 100px, client.focused #ffffff #000000 #ffffff #000000 #ffffff


### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.




### Input configuration
#swaymsg -t get_inputs
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
input type:touchpad {
	dwt disabled
	accel_profile "flat"
	pointer_accel 0.5
}
input type:pointer {
    accel_profile "flat"
    pointer_accel 0
}
### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+semicolon exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'IM GOING TO MISS YOU' -B 'k, bye :(' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+u workspace number 1
    bindsym $mod+i workspace number 2
    bindsym $mod+o workspace number 3
    bindsym $mod+p workspace number 4
    bindsym $mod+bracketleft workspace number 5
    bindsym $mod+bracketright workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+minus workspace number 11
    bindsym $mod+equal workspace number 12
    # Move focused container to workspace
    bindsym $mod+Shift+u move container to workspace number 1
    bindsym $mod+Shift+i move container to workspace number 2
    bindsym $mod+Shift+o move container to workspace number 3
    bindsym $mod+Shift+p move container to workspace number 4
    bindsym $mod+Shift+bracketleft move container to workspace number 5
    bindsym $mod+Shift+bracketright move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    bindsym $mod+Shift+minus move container to workspace number 11
    bindsym $mod+Shift+equal move container to workspace number 12
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

#for_window [class="steam"] move container to workspace 12
#for_window [class="steam-runtime-1"] move container to workspace 12
#for_window [instance="steam"] move container to workspace 12
#for_window [instance="steamwebhelper" class="steam"] move container to workspace 12
#for_window [title="discord-screenaudio"] move container to workspace 6

assign [app_id="de.shorsh.discord-screenaudio"] 6
#assign [class="spotify"] 7
assign [class="reaper"] 8
for_window [title="Reaper Keys Feedback"] resize shrink width 55ppt, splitv
assign [title="Mixer"] 9
assign [class="steam"] 12
for_window [title="Friends List"] resize set width 70ppt, splitv

#climp
assign [app_id="spot"] 7
for_window [app_id="spot"] move left
assign [app_id="lyr"] 7
for_window [app_id="lyr"] move right, splitv, move up, resize set width 25ppt, resize set height 65ppt
assign [title="imvalbumart"] 7
for_window [title="imvalbumart"] move right, splitv, move down, resize set width 25ppt




for_window [title="Weston"] fullscreen
for_window [title="GNU Image Manipulation Program"] fullscreen

#floating enable, resize set width 50ppt height 40ppt, move position 40ppt 2ppt

#move container to workspace 2
#resize shrink width 55ppt, splitv
for_window [title="Friends List"] resize shrink width 70ppt, splitv
##for_window [title="Rain World"] move container to workspace 7





#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles (i never use these)
    #bindsym $mod+s layout stacking
    #bindsym $mod+w layout tabbed
    #bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+shift+space floating toggle

    # Swap focue between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+shift+period move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+period scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# Status Bar:
bar {
	swaybar_command waybar
}

include /etc/sway/config.d/*

